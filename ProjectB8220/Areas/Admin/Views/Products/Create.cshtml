@model Project.Models.DataModels.Product

@{
    ViewBag.Title = "Thêm sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Default box -->
<div class="box">
    <div class="box-header with-border">
        <h3 class="box-title">@ViewBag.Title</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                    title="Collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                <i class="fa fa-times"></i>
            </button>
        </div>
    </div>
    <div class="box-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
              
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Images, new { htmlAttributes = new { data_multilpe = "true",@class = "form-control upload_file" } })
                        @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FeatureImages, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FeatureImages, new { htmlAttributes = new { data_multilpe = "false", @class = "form-control upload_file" } })
                        @Html.ValidationMessageFor(model => model.FeatureImages, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                         @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Related, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Related)
                            @Html.ValidationMessageFor(model => model.Related, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Status)
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create product" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
        
    </div>
    <!-- /.box-body -->
    <div class="box-footer">
        @Html.ActionLink("Quay lại ", "Index")
    </div>
    <!-- /.box-footer-->
</div>
<!-- /.box -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Areas/Admin/Content/ckfinder/ckfinder.js"></script>
    <script>
        $(function() {
            $(".upload_file").click(function () {
                var ip = $(this);
                var finder = new CKFinder();
                finder.selectActionFunction = function (url, file, files) {
                    if (ip.data("multiple") == true) {
                        var imgs = "";
                        $.each(files, function () {
                            imgs += $(this)[0].url + ";"
                            ip.after("<img src='" +$(this)[0].url+"' width='75px'/>");
                        })
                        ip.val(imgs);
                    } else {
                        ip.val(url);
                        ip.after("<img src='" +url+"' width='75px'/>");
                    }
                }
                finder.popup();
            })
        })
    </script>
}
